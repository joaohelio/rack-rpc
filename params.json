{"name":"Rack-rpc","tagline":"Rack middleware for serving up RPC endpoints.","body":"JSON-RPC/XML-RPC Server for Rack Applications\r\n=============================================\r\n\r\n[![Build Status](https://secure.travis-ci.org/threez/rack-rpc.png?branch=master)](http://travis-ci.org/threez/rack-rpc)\r\n\r\nThis is a [Rack][] middleware that facilitates the creation of\r\nprotocol-agnostic RPC servers. The current implementation provides support\r\nfor [JSON-RPC 2.0][] and [XML-RPC][].\r\n\r\n* <https://github.com/datagraph/rack-rpc>\r\n\r\nFeatures\r\n--------\r\n\r\n* Handles JSON-RPC and XML-RPC requests with the same code.\r\n* Compatible with any Rack application and any Rack-based framework.\r\n* Provides Rails-style controller filtering for your RPC methods.\r\n\r\nExamples\r\n--------\r\n\r\n### A basic RPC server\r\n\r\n    require 'rack/rpc'\r\n    \r\n    class Server < Rack::RPC::Server\r\n      def hello_world\r\n        \"Hello, world!\"\r\n      end\r\n      rpc 'hello_world' => :hello_world\r\n    end\r\n\r\n### Simple filtering\r\n\r\n    require 'rack/rpc'\r\n    \r\n    class Server < Rack::RPC::Server\r\n      before_filter :check_auth\r\n\r\n      def hello_world\r\n        \"Hello, world!\"\r\n      end\r\n      rpc 'hello_world' => :hello_world\r\n\r\n      private\r\n\r\n      def check_auth\r\n        raise \"Not authorized\" unless authorized\r\n      end\r\n    end\r\n\r\n### Filtering via a proc with more options\r\n\r\n    require 'rack/rpc'\r\n    \r\n    class Server < Rack::RPC::Server\r\n      before_filter :check_auth, :only => :super_secret_hello_world do\r\n        raise \"Not authorized\" unless authorized\r\n      end\r\n\r\n      def hello_world\r\n        \"Hello, world!\"\r\n      end\r\n      rpc 'hello_world' => :hello_world\r\n\r\n      def super_secret_hello_world\r\n        'super_secret_hello_world'\r\n      end\r\n      rpc 'super_secret_hello_world' => :super_secret_hello_world\r\n    end\r\n\r\n### Running the server\r\n\r\n    # config.ru\r\n    use Rack::RPC::Endpoint, Server.new\r\n    \r\n    run MyApplication\r\n\r\n### Customizing the default RPC path\r\n\r\n    # config.ru\r\n    use Rack::RPC::Endpoint, Server.new, :path => '/api'\r\n    \r\n    run MyApplication\r\n\r\nMore on Filters\r\n---------------\r\n\r\nThe `:only` and `:except` options for filters can take a single method or an\r\narray of methods.\r\n\r\nYou can halt execution in a filter by raising an exception. An error\r\nresponse will be returned with the exception's message set as the error\r\nobject's message text.\r\n\r\nCommunicationg with the Server\r\n------------------------------\r\n\r\nBy default, methods will only be invoked on `POST` requests to \"/rpc\". The\r\ndefault path can be overridden by sending a `:path` option when creating\r\nyour middleware (see example above).\r\n\r\nThe protocol used is determined by the `CONTENT_TYPE` header\r\n(\"application/xml\" and \"text/xml\" for XML and \"application/json\" for JSON).\r\n\r\nDependencies\r\n------------\r\n\r\n* [Rack](http://rubygems.org/gems/rack) (>= 1.0.0)\r\n* [Builder](http://rubygems.org/gems/builder) (>= 2.1.2)\r\n\r\nInstallation\r\n------------\r\n\r\nThe recommended installation method is via [RubyGems](http://rubygems.org/).\r\nTo install the latest official release of the gem, do:\r\n\r\n    % [sudo] gem install rack-rpc\r\n\r\nDownload\r\n--------\r\n\r\nTo get a local working copy of the development repository, do:\r\n\r\n    % git clone git://github.com/datagraph/rack-rpc.git\r\n\r\nAlternatively, download the latest development version as a tarball as\r\nfollows:\r\n\r\n    % wget http://github.com/datagraph/rack-rpc/tarball/master\r\n\r\nMailing List\r\n------------\r\n\r\n* <http://groups.google.com/group/rack-devel>\r\n\r\nAuthors\r\n-------\r\n\r\n* [Arto Bendiken](https://github.com/bendiken) - <http://ar.to/>\r\n* [Josh Huckabee](https://github.com/jhuckabee) - <http://joshhuckabee.com/>\r\n\r\nLicense\r\n-------\r\n\r\nThis is free and unencumbered public domain software. For more information,\r\nsee <http://unlicense.org/> or the accompanying {file:UNLICENSE} file.\r\n\r\n[Rack]:           http://rack.rubyforge.org/\r\n[JSON-RPC 2.0]:   http://groups.google.com/group/json-rpc/web/json-rpc-2-0\r\n[XML-RPC]:        http://www.xmlrpc.com/","google":"UA-51653708-1","note":"Don't delete this file! It's used internally to help with page regeneration."}